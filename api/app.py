import os
from dotenv import load_dotenv
from flask import Flask, request
from google import genai

load_dotenv()
API_KEY_1=os.getenv('API_KEY_1')
API_KEY_2=os.getenv('API_KEY_2')

app = Flask(__name__)
client = genai.Client(api_key=API_KEY_1)
REGIONS=['Алтайский край', 'Амурская обл.', 'Архангельская обл.', 'Астраханская обл.', 'Белгородская обл.', 'Брянская обл.', 'Владимирская обл.', 'Волгоградская обл.', 'Вологодская обл.', 'Воронежская обл.', 'Еврейская АО', 'Забайкальский край', 'Ивановская обл.', 'Иркутская обл.', 'Кабардино-Балкарская Республика', 'Калининградская обл.', 'Калужская обл.', 'Камчатский край', 'Карачаево-Черкесская Республика', 'Кемеровская обл. - Кузбасс', 'Кировская обл.', 'Костромская обл.', 'Краснодарский край', 'Красноярский край', 'Курганская обл.', 'Курская обл.', 'Ленинградская обл.', 'Липецкая обл.', 'Магаданская обл.', 'Московская обл.', 'Мурманская обл.', 'Ненецкий АО', 'Нижегородская обл.', 'Новгородская обл.', 'Новосибирская обл.', 'Омская обл.', 'Оренбургская обл.', 'Орловская обл.', 'Пензенская обл.', 'Пермский край', 'Приморский край', 'Псковская обл.', 'Республика Адыгея (Адыгея)', 'Республика Алтай', 'Республика Башкортостан', 'Республика Бурятия', 'Республика Дагестан', 'Республика Ингушетия', 'Республика Калмыкия', 'Республика Карелия', 'Республика Коми', 'Республика Крым', 'Республика Марий Эл', 'Республика Мордовия', 'Республика Саха (Якутия)', 'Республика Северная Осетия - Алания', 'Республика Татарстан (Татарстан)', 'Республика Тыва', 'Республика Хакасия', 'Ростовская обл.', 'Рязанская обл.', 'Самарская обл.', 'Саратовская обл.', 'Сахалинская обл.', 'Свердловская обл.', 'Смоленская обл.', 'Ставропольский край', 'Тамбовская обл.', 'Тверская обл.', 'Томская обл.', 'Тульская обл.', 'Тюменская обл.', 'Удмуртская Республика', 'Ульяновская обл.', 'Хабаровский край', 'Ханты-Мансийский АО - Югра', 'Челябинская обл.', 'Чеченская Республика', 'Чувашская Республика - Чувашия', 'Чукотский АО', 'Ямало-Ненецкий АО', 'Ярославская обл.', 'г. Москва', 'г. Санкт-Петербург', 'город федерального значения Севастополь']
REGIONS_AS_STR=";".join(REGIONS)

def get_normalized_region_from_gemini(region: str) -> str:
    full_req = REGIONS_AS_STR + f"\nЭто список регионов РФ. К какому из этих регионов относится \"{region}\"? В качестве ответа верни только название одного региона из списка в точности так как это было в списке, например, Брянская обл. Если указанное место невозможно соотнести с регионом из списка или указанный регион не относится к РФ, верни оригинальное значение"
    response = client.models.generate_content(
        model="gemini-2.0-flash-lite", contents=full_req
    )
    print(f"Received request for region {region}. Response: {response.text}\n")
    return response.text


@app.route('/get_region', methods=['GET'])
def get_region():
    region = request.args.get('region', '')
    normalized_region = get_normalized_region_from_gemini(region)
    return normalized_region
    

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
    # print()